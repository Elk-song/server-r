/topic/122322
    优点：
        路由友好一些，
        利于SEO （搜索引擎 更喜欢这一种）
        SPA     (单页面应用)

/topic?id=weqwqe
    优点：
        灵活

/topic/:id/:name/:age   ===>都得有，一一匹配

/topic/?a=xxx&b=xxx     ===>可省略

模块化
    所有语言都有模块化系统（除了js）;
    1.前端模块化
        传统模块化  requirejs   AMD&CMD 和 seaJs  CMD (官网都没了 很老的东西)
            命名空间---你在这个空间里面写的变量都不是全局变量
            CMD:公共模块定义（同步的）
            AMD:异步模块定义（异步的）

        现代模块化  
                value   angular react   (天生自带模块化，不用别人支持它)

        玩法：webpack      ====>最底层是CMD
            ---同等体积下 把多个文件 打包为一个文件

渲染
    ----后台渲染
        1.稳定（数据）
        2.体积大（页面整个渲染完毕 发送给前台）
        3.安全（不会导致数据泄露）
        4.利于SEO（百度喜欢 （中国最大搜索引擎头子））

    ----前台渲染
        1.不那么稳定
        2.体积小（后台只给你数据就可以了）
        3.不那么安全，没处理好，会泄露数据
        4.灵活，用户体验好
            （
                前台删除一条数据 非常简单
                后端删除需要重新传一次给前台
            ）
    后台渲染页面加载速度会更快一些
        只要你不乱搞 非要来30w个div 不会有太大区别（前台渲染）

    服务端渲染的框架===>多如牛毛

        pug 破坏式---破坏html
            1.html就代表一个标签
            2.缩进控制层级

        ejs 非破坏式    ---保留html结构